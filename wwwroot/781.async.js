!(function(){"use strict";var ot=Object.defineProperty,lt=Object.defineProperties;var ht=Object.getOwnPropertyDescriptors;var we=Object.getOwnPropertySymbols;var mt=Object.prototype.hasOwnProperty,ut=Object.prototype.propertyIsEnumerable;var Re=(z,S,C)=>S in z?ot(z,S,{enumerable:!0,configurable:!0,writable:!0,value:C}):z[S]=C,Me=(z,S)=>{for(var C in S||(S={}))mt.call(S,C)&&Re(z,C,S[C]);if(we)for(var C of we(S))ut.call(S,C)&&Re(z,C,S[C]);return z},Ce=(z,S)=>lt(z,ht(S));(self.webpackChunk=self.webpackChunk||[]).push([[781],{5446:function(z,S,C){C.r(S),C.d(S,{diagram:function(){return rt}});var m=C(81650),Le=C(31539),pt=C(19421),ft=C(17967),bt=C(27856),ne=function(){var r=function(K,l,p,g){for(p=p||{},g=K.length;g--;p[K[g]]=l);return p},c=[1,4],o=[1,7],h=[1,5],n=[1,9],a=[1,6],b=[2,6],f=[1,16],T=[6,8,14,20,22,24,25,27,29,32,37,40,50,55],E=[8,14,20,22,24,25,27,29,32,37,40],u=[8,13,14,20,22,24,25,27,29,32,37,40],k=[1,26],x=[6,8,14,50,55],s=[8,14,55],O=[1,53],R=[1,52],H=[8,14,30,33,35,38,55],y=[1,67],d=[1,68],_=[1,69],N=[8,14,33,35,42,55],le={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,directive:5,GG:6,document:7,EOF:8,":":9,DIR:10,options:11,body:12,OPT:13,NL:14,line:15,statement:16,commitStatement:17,mergeStatement:18,cherryPickStatement:19,acc_title:20,acc_title_value:21,acc_descr:22,acc_descr_value:23,acc_descr_multiline_value:24,section:25,branchStatement:26,CHECKOUT:27,ref:28,BRANCH:29,ORDER:30,NUM:31,CHERRY_PICK:32,COMMIT_ID:33,STR:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,openDirective:46,typeDirective:47,closeDirective:48,argDirective:49,open_directive:50,type_directive:51,arg_directive:52,close_directive:53,ID:54,";":55,$accept:0,$end:1},terminals_:{2:"error",6:"GG",8:"EOF",9:":",10:"DIR",13:"OPT",14:"NL",20:"acc_title",21:"acc_title_value",22:"acc_descr",23:"acc_descr_value",24:"acc_descr_multiline_value",25:"section",27:"CHECKOUT",29:"BRANCH",30:"ORDER",31:"NUM",32:"CHERRY_PICK",33:"COMMIT_ID",34:"STR",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",50:"open_directive",51:"type_directive",52:"arg_directive",53:"close_directive",54:"ID",55:";"},productions_:[0,[3,2],[3,2],[3,3],[3,4],[3,5],[7,0],[7,2],[11,2],[11,1],[12,0],[12,2],[15,2],[15,1],[16,1],[16,1],[16,1],[16,2],[16,2],[16,1],[16,1],[16,1],[16,2],[26,2],[26,4],[19,3],[19,5],[19,5],[19,5],[19,5],[18,2],[18,4],[18,4],[18,4],[18,6],[18,6],[18,6],[18,6],[18,6],[18,6],[18,8],[18,8],[18,8],[18,8],[18,8],[18,8],[17,2],[17,3],[17,3],[17,5],[17,5],[17,3],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,3],[17,5],[17,5],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[41,0],[41,1],[39,1],[39,1],[39,1],[5,3],[5,5],[46,1],[47,1],[49,1],[48,1],[28,1],[28,1],[4,1],[4,1],[4,1]],performAction:function(l,p,g,i,v,e,Z){var t=e.length-1;switch(v){case 3:return e[t];case 4:return e[t-1];case 5:return i.setDirection(e[t-3]),e[t-1];case 7:i.setOptions(e[t-1]),this.$=e[t];break;case 8:e[t-1]+=e[t],this.$=e[t-1];break;case 10:this.$=[];break;case 11:e[t-1].push(e[t]),this.$=e[t-1];break;case 12:this.$=e[t-1];break;case 17:this.$=e[t].trim(),i.setAccTitle(this.$);break;case 18:case 19:this.$=e[t].trim(),i.setAccDescription(this.$);break;case 20:i.addSection(e[t].substr(8)),this.$=e[t].substr(8);break;case 22:i.checkout(e[t]);break;case 23:i.branch(e[t]);break;case 24:i.branch(e[t-2],e[t]);break;case 25:i.cherryPick(e[t],"",void 0);break;case 26:i.cherryPick(e[t-2],"",e[t]);break;case 27:case 29:i.cherryPick(e[t-2],"","");break;case 28:i.cherryPick(e[t],"",e[t-2]);break;case 30:i.merge(e[t],"","","");break;case 31:i.merge(e[t-2],e[t],"","");break;case 32:i.merge(e[t-2],"",e[t],"");break;case 33:i.merge(e[t-2],"","",e[t]);break;case 34:i.merge(e[t-4],e[t],"",e[t-2]);break;case 35:i.merge(e[t-4],"",e[t],e[t-2]);break;case 36:i.merge(e[t-4],"",e[t-2],e[t]);break;case 37:i.merge(e[t-4],e[t-2],e[t],"");break;case 38:i.merge(e[t-4],e[t-2],"",e[t]);break;case 39:i.merge(e[t-4],e[t],e[t-2],"");break;case 40:i.merge(e[t-6],e[t-4],e[t-2],e[t]);break;case 41:i.merge(e[t-6],e[t],e[t-4],e[t-2]);break;case 42:i.merge(e[t-6],e[t-4],e[t],e[t-2]);break;case 43:i.merge(e[t-6],e[t-2],e[t-4],e[t]);break;case 44:i.merge(e[t-6],e[t],e[t-2],e[t-4]);break;case 45:i.merge(e[t-6],e[t-2],e[t],e[t-4]);break;case 46:i.commit(e[t]);break;case 47:i.commit("","",i.commitType.NORMAL,e[t]);break;case 48:i.commit("","",e[t],"");break;case 49:i.commit("","",e[t],e[t-2]);break;case 50:i.commit("","",e[t-2],e[t]);break;case 51:i.commit("",e[t],i.commitType.NORMAL,"");break;case 52:i.commit("",e[t-2],i.commitType.NORMAL,e[t]);break;case 53:i.commit("",e[t],i.commitType.NORMAL,e[t-2]);break;case 54:i.commit("",e[t-2],e[t],"");break;case 55:i.commit("",e[t],e[t-2],"");break;case 56:i.commit("",e[t-4],e[t-2],e[t]);break;case 57:i.commit("",e[t-4],e[t],e[t-2]);break;case 58:i.commit("",e[t-2],e[t-4],e[t]);break;case 59:i.commit("",e[t],e[t-4],e[t-2]);break;case 60:i.commit("",e[t],e[t-2],e[t-4]);break;case 61:i.commit("",e[t-2],e[t],e[t-4]);break;case 62:i.commit(e[t],"",i.commitType.NORMAL,"");break;case 63:i.commit(e[t],"",i.commitType.NORMAL,e[t-2]);break;case 64:i.commit(e[t-2],"",i.commitType.NORMAL,e[t]);break;case 65:i.commit(e[t-2],"",e[t],"");break;case 66:i.commit(e[t],"",e[t-2],"");break;case 67:i.commit(e[t],e[t-2],i.commitType.NORMAL,"");break;case 68:i.commit(e[t-2],e[t],i.commitType.NORMAL,"");break;case 69:i.commit(e[t-4],"",e[t-2],e[t]);break;case 70:i.commit(e[t-4],"",e[t],e[t-2]);break;case 71:i.commit(e[t-2],"",e[t-4],e[t]);break;case 72:i.commit(e[t],"",e[t-4],e[t-2]);break;case 73:i.commit(e[t],"",e[t-2],e[t-4]);break;case 74:i.commit(e[t-2],"",e[t],e[t-4]);break;case 75:i.commit(e[t-4],e[t],e[t-2],"");break;case 76:i.commit(e[t-4],e[t-2],e[t],"");break;case 77:i.commit(e[t-2],e[t],e[t-4],"");break;case 78:i.commit(e[t],e[t-2],e[t-4],"");break;case 79:i.commit(e[t],e[t-4],e[t-2],"");break;case 80:i.commit(e[t-2],e[t-4],e[t],"");break;case 81:i.commit(e[t-4],e[t],i.commitType.NORMAL,e[t-2]);break;case 82:i.commit(e[t-4],e[t-2],i.commitType.NORMAL,e[t]);break;case 83:i.commit(e[t-2],e[t],i.commitType.NORMAL,e[t-4]);break;case 84:i.commit(e[t],e[t-2],i.commitType.NORMAL,e[t-4]);break;case 85:i.commit(e[t],e[t-4],i.commitType.NORMAL,e[t-2]);break;case 86:i.commit(e[t-2],e[t-4],i.commitType.NORMAL,e[t]);break;case 87:i.commit(e[t-6],e[t-4],e[t-2],e[t]);break;case 88:i.commit(e[t-6],e[t-4],e[t],e[t-2]);break;case 89:i.commit(e[t-6],e[t-2],e[t-4],e[t]);break;case 90:i.commit(e[t-6],e[t],e[t-4],e[t-2]);break;case 91:i.commit(e[t-6],e[t-2],e[t],e[t-4]);break;case 92:i.commit(e[t-6],e[t],e[t-2],e[t-4]);break;case 93:i.commit(e[t-4],e[t-6],e[t-2],e[t]);break;case 94:i.commit(e[t-4],e[t-6],e[t],e[t-2]);break;case 95:i.commit(e[t-2],e[t-6],e[t-4],e[t]);break;case 96:i.commit(e[t],e[t-6],e[t-4],e[t-2]);break;case 97:i.commit(e[t-2],e[t-6],e[t],e[t-4]);break;case 98:i.commit(e[t],e[t-6],e[t-2],e[t-4]);break;case 99:i.commit(e[t],e[t-4],e[t-2],e[t-6]);break;case 100:i.commit(e[t-2],e[t-4],e[t],e[t-6]);break;case 101:i.commit(e[t],e[t-2],e[t-4],e[t-6]);break;case 102:i.commit(e[t-2],e[t],e[t-4],e[t-6]);break;case 103:i.commit(e[t-4],e[t-2],e[t],e[t-6]);break;case 104:i.commit(e[t-4],e[t],e[t-2],e[t-6]);break;case 105:i.commit(e[t-2],e[t-4],e[t-6],e[t]);break;case 106:i.commit(e[t],e[t-4],e[t-6],e[t-2]);break;case 107:i.commit(e[t-2],e[t],e[t-6],e[t-4]);break;case 108:i.commit(e[t],e[t-2],e[t-6],e[t-4]);break;case 109:i.commit(e[t-4],e[t-2],e[t-6],e[t]);break;case 110:i.commit(e[t-4],e[t],e[t-6],e[t-2]);break;case 111:this.$="";break;case 112:this.$=e[t];break;case 113:this.$=i.commitType.NORMAL;break;case 114:this.$=i.commitType.REVERSE;break;case 115:this.$=i.commitType.HIGHLIGHT;break;case 118:i.parseDirective("%%{","open_directive");break;case 119:i.parseDirective(e[t],"type_directive");break;case 120:e[t]=e[t].trim().replace(/'/g,'"'),i.parseDirective(e[t],"arg_directive");break;case 121:i.parseDirective("}%%","close_directive","gitGraph");break}},table:[{3:1,4:2,5:3,6:c,8:o,14:h,46:8,50:n,55:a},{1:[3]},{3:10,4:2,5:3,6:c,8:o,14:h,46:8,50:n,55:a},{3:11,4:2,5:3,6:c,8:o,14:h,46:8,50:n,55:a},{7:12,8:b,9:[1,13],10:[1,14],11:15,14:f},r(T,[2,124]),r(T,[2,125]),r(T,[2,126]),{47:17,51:[1,18]},{51:[2,118]},{1:[2,1]},{1:[2,2]},{8:[1,19]},{7:20,8:b,11:15,14:f},{9:[1,21]},r(E,[2,10],{12:22,13:[1,23]}),r(u,[2,9]),{9:[1,25],48:24,53:k},r([9,53],[2,119]),{1:[2,3]},{8:[1,27]},{7:28,8:b,11:15,14:f},{8:[2,7],14:[1,31],15:29,16:30,17:32,18:33,19:34,20:[1,35],22:[1,36],24:[1,37],25:[1,38],26:39,27:[1,40],29:[1,44],32:[1,43],37:[1,42],40:[1,41]},r(u,[2,8]),r(x,[2,116]),{49:45,52:[1,46]},r(x,[2,121]),{1:[2,4]},{8:[1,47]},r(E,[2,11]),{4:48,8:o,14:h,55:a},r(E,[2,13]),r(s,[2,14]),r(s,[2,15]),r(s,[2,16]),{21:[1,49]},{23:[1,50]},r(s,[2,19]),r(s,[2,20]),r(s,[2,21]),{28:51,34:O,54:R},r(s,[2,111],{41:54,33:[1,57],34:[1,59],35:[1,55],38:[1,56],42:[1,58]}),{28:60,34:O,54:R},{33:[1,61],35:[1,62]},{28:63,34:O,54:R},{48:64,53:k},{53:[2,120]},{1:[2,5]},r(E,[2,12]),r(s,[2,17]),r(s,[2,18]),r(s,[2,22]),r(H,[2,122]),r(H,[2,123]),r(s,[2,46]),{34:[1,65]},{39:66,43:y,44:d,45:_},{34:[1,70]},{34:[1,71]},r(s,[2,112]),r(s,[2,30],{33:[1,72],35:[1,74],38:[1,73]}),{34:[1,75]},{34:[1,76],36:[1,77]},r(s,[2,23],{30:[1,78]}),r(x,[2,117]),r(s,[2,47],{33:[1,80],38:[1,79],42:[1,81]}),r(s,[2,48],{33:[1,83],35:[1,82],42:[1,84]}),r(N,[2,113]),r(N,[2,114]),r(N,[2,115]),r(s,[2,51],{35:[1,85],38:[1,86],42:[1,87]}),r(s,[2,62],{33:[1,90],35:[1,88],38:[1,89]}),{34:[1,91]},{39:92,43:y,44:d,45:_},{34:[1,93]},r(s,[2,25],{35:[1,94]}),{33:[1,95]},{33:[1,96]},{31:[1,97]},{39:98,43:y,44:d,45:_},{34:[1,99]},{34:[1,100]},{34:[1,101]},{34:[1,102]},{34:[1,103]},{34:[1,104]},{39:105,43:y,44:d,45:_},{34:[1,106]},{34:[1,107]},{39:108,43:y,44:d,45:_},{34:[1,109]},r(s,[2,31],{35:[1,111],38:[1,110]}),r(s,[2,32],{33:[1,113],35:[1,112]}),r(s,[2,33],{33:[1,114],38:[1,115]}),{34:[1,116],36:[1,117]},{34:[1,118]},{34:[1,119]},r(s,[2,24]),r(s,[2,49],{33:[1,120],42:[1,121]}),r(s,[2,53],{38:[1,122],42:[1,123]}),r(s,[2,63],{33:[1,125],38:[1,124]}),r(s,[2,50],{33:[1,126],42:[1,127]}),r(s,[2,55],{35:[1,128],42:[1,129]}),r(s,[2,66],{33:[1,131],35:[1,130]}),r(s,[2,52],{38:[1,132],42:[1,133]}),r(s,[2,54],{35:[1,134],42:[1,135]}),r(s,[2,67],{35:[1,137],38:[1,136]}),r(s,[2,64],{33:[1,139],38:[1,138]}),r(s,[2,65],{33:[1,141],35:[1,140]}),r(s,[2,68],{35:[1,143],38:[1,142]}),{39:144,43:y,44:d,45:_},{34:[1,145]},{34:[1,146]},{34:[1,147]},{34:[1,148]},{39:149,43:y,44:d,45:_},r(s,[2,26]),r(s,[2,27]),r(s,[2,28]),r(s,[2,29]),{34:[1,150]},{34:[1,151]},{39:152,43:y,44:d,45:_},{34:[1,153]},{39:154,43:y,44:d,45:_},{34:[1,155]},{34:[1,156]},{34:[1,157]},{34:[1,158]},{34:[1,159]},{34:[1,160]},{34:[1,161]},{39:162,43:y,44:d,45:_},{34:[1,163]},{34:[1,164]},{34:[1,165]},{39:166,43:y,44:d,45:_},{34:[1,167]},{39:168,43:y,44:d,45:_},{34:[1,169]},{34:[1,170]},{34:[1,171]},{39:172,43:y,44:d,45:_},{34:[1,173]},r(s,[2,37],{35:[1,174]}),r(s,[2,38],{38:[1,175]}),r(s,[2,36],{33:[1,176]}),r(s,[2,39],{35:[1,177]}),r(s,[2,34],{38:[1,178]}),r(s,[2,35],{33:[1,179]}),r(s,[2,60],{42:[1,180]}),r(s,[2,73],{33:[1,181]}),r(s,[2,61],{42:[1,182]}),r(s,[2,84],{38:[1,183]}),r(s,[2,74],{33:[1,184]}),r(s,[2,83],{38:[1,185]}),r(s,[2,59],{42:[1,186]}),r(s,[2,72],{33:[1,187]}),r(s,[2,58],{42:[1,188]}),r(s,[2,78],{35:[1,189]}),r(s,[2,71],{33:[1,190]}),r(s,[2,77],{35:[1,191]}),r(s,[2,57],{42:[1,192]}),r(s,[2,85],{38:[1,193]}),r(s,[2,56],{42:[1,194]}),r(s,[2,79],{35:[1,195]}),r(s,[2,80],{35:[1,196]}),r(s,[2,86],{38:[1,197]}),r(s,[2,70],{33:[1,198]}),r(s,[2,81],{38:[1,199]}),r(s,[2,69],{33:[1,200]}),r(s,[2,75],{35:[1,201]}),r(s,[2,76],{35:[1,202]}),r(s,[2,82],{38:[1,203]}),{34:[1,204]},{39:205,43:y,44:d,45:_},{34:[1,206]},{34:[1,207]},{39:208,43:y,44:d,45:_},{34:[1,209]},{34:[1,210]},{34:[1,211]},{34:[1,212]},{39:213,43:y,44:d,45:_},{34:[1,214]},{39:215,43:y,44:d,45:_},{34:[1,216]},{34:[1,217]},{34:[1,218]},{34:[1,219]},{34:[1,220]},{34:[1,221]},{34:[1,222]},{39:223,43:y,44:d,45:_},{34:[1,224]},{34:[1,225]},{34:[1,226]},{39:227,43:y,44:d,45:_},{34:[1,228]},{39:229,43:y,44:d,45:_},{34:[1,230]},{34:[1,231]},{34:[1,232]},{39:233,43:y,44:d,45:_},r(s,[2,40]),r(s,[2,42]),r(s,[2,41]),r(s,[2,43]),r(s,[2,45]),r(s,[2,44]),r(s,[2,101]),r(s,[2,102]),r(s,[2,99]),r(s,[2,100]),r(s,[2,104]),r(s,[2,103]),r(s,[2,108]),r(s,[2,107]),r(s,[2,106]),r(s,[2,105]),r(s,[2,110]),r(s,[2,109]),r(s,[2,98]),r(s,[2,97]),r(s,[2,96]),r(s,[2,95]),r(s,[2,93]),r(s,[2,94]),r(s,[2,92]),r(s,[2,91]),r(s,[2,90]),r(s,[2,89]),r(s,[2,87]),r(s,[2,88])],defaultActions:{9:[2,118],10:[2,1],11:[2,2],19:[2,3],27:[2,4],46:[2,120],47:[2,5]},parseError:function(l,p){if(p.recoverable)this.trace(l);else{var g=new Error(l);throw g.hash=p,g}},parse:function(l){var p=this,g=[0],i=[],v=[null],e=[],Z=this.table,t="",ie=0,Ee=0,st=2,ve=1,ct=e.slice.call(arguments,1),A=Object.create(this.lexer),F={yy:{}};for(var me in this.yy)Object.prototype.hasOwnProperty.call(this.yy,me)&&(F.yy[me]=this.yy[me]);A.setInput(l,F.yy),F.yy.lexer=A,F.yy.parser=this,typeof A.yylloc=="undefined"&&(A.yylloc={});var ue=A.yylloc;e.push(ue);var nt=A.options&&A.options.ranges;typeof F.yy.parseError=="function"?this.parseError=F.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function at(){var j;return j=i.pop()||A.lex()||ve,typeof j!="number"&&(j instanceof Array&&(i=j,j=i.pop()),j=p.symbols_[j]||j),j}for(var G,q,V,pe,W={},se,B,Te,ce;;){if(q=g[g.length-1],this.defaultActions[q]?V=this.defaultActions[q]:((G===null||typeof G=="undefined")&&(G=at()),V=Z[q]&&Z[q][G]),typeof V=="undefined"||!V.length||!V[0]){var fe="";ce=[];for(se in Z[q])this.terminals_[se]&&se>st&&ce.push("'"+this.terminals_[se]+"'");A.showPosition?fe="Parse error on line "+(ie+1)+`:
`+A.showPosition()+`
Expecting `+ce.join(", ")+", got '"+(this.terminals_[G]||G)+"'":fe="Parse error on line "+(ie+1)+": Unexpected "+(G==ve?"end of input":"'"+(this.terminals_[G]||G)+"'"),this.parseError(fe,{text:A.match,token:this.terminals_[G]||G,line:A.yylineno,loc:ue,expected:ce})}if(V[0]instanceof Array&&V.length>1)throw new Error("Parse Error: multiple actions possible at state: "+q+", token: "+G);switch(V[0]){case 1:g.push(G),v.push(A.yytext),e.push(A.yylloc),g.push(V[1]),G=null,Ee=A.yyleng,t=A.yytext,ie=A.yylineno,ue=A.yylloc;break;case 2:if(B=this.productions_[V[1]][1],W.$=v[v.length-B],W._$={first_line:e[e.length-(B||1)].first_line,last_line:e[e.length-1].last_line,first_column:e[e.length-(B||1)].first_column,last_column:e[e.length-1].last_column},nt&&(W._$.range=[e[e.length-(B||1)].range[0],e[e.length-1].range[1]]),pe=this.performAction.apply(W,[t,Ee,ie,F.yy,V[1],v,e].concat(ct)),typeof pe!="undefined")return pe;B&&(g=g.slice(0,-1*B*2),v=v.slice(0,-1*B),e=e.slice(0,-1*B)),g.push(this.productions_[V[1]][0]),v.push(W.$),e.push(W._$),Te=Z[g[g.length-2]][g[g.length-1]],g.push(Te);break;case 3:return!0}}return!0}},it=function(){var K={EOF:1,parseError:function(p,g){if(this.yy.parser)this.yy.parser.parseError(p,g);else throw new Error(p)},setInput:function(l,p){return this.yy=p||this.yy||{},this._input=l,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var l=this._input[0];this.yytext+=l,this.yyleng++,this.offset++,this.match+=l,this.matched+=l;var p=l.match(/(?:\r\n?|\n).*/g);return p?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),l},unput:function(l){var p=l.length,g=l.split(/(?:\r\n?|\n)/g);this._input=l+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-p),this.offset-=p;var i=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),g.length-1&&(this.yylineno-=g.length-1);var v=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:g?(g.length===i.length?this.yylloc.first_column:0)+i[i.length-g.length].length-g[0].length:this.yylloc.first_column-p},this.options.ranges&&(this.yylloc.range=[v[0],v[0]+this.yyleng-p]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},less:function(l){this.unput(this.match.slice(l))},pastInput:function(){var l=this.matched.substr(0,this.matched.length-this.match.length);return(l.length>20?"...":"")+l.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var l=this.match;return l.length<20&&(l+=this._input.substr(0,20-l.length)),(l.substr(0,20)+(l.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var l=this.pastInput(),p=new Array(l.length+1).join("-");return l+this.upcomingInput()+`
`+p+"^"},test_match:function(l,p){var g,i,v;if(this.options.backtrack_lexer&&(v={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(v.yylloc.range=this.yylloc.range.slice(0))),i=l[0].match(/(?:\r\n?|\n).*/g),i&&(this.yylineno+=i.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:i?i[i.length-1].length-i[i.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+l[0].length},this.yytext+=l[0],this.match+=l[0],this.matches=l,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(l[0].length),this.matched+=l[0],g=this.performAction.call(this,this.yy,this,p,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),g)return g;if(this._backtrack){for(var e in v)this[e]=v[e];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var l,p,g,i;this._more||(this.yytext="",this.match="");for(var v=this._currentRules(),e=0;e<v.length;e++)if(g=this._input.match(this.rules[v[e]]),g&&(!p||g[0].length>p[0].length)){if(p=g,i=e,this.options.backtrack_lexer){if(l=this.test_match(g,v[e]),l!==!1)return l;if(this._backtrack){p=!1;continue}else return!1}else if(!this.options.flex)break}return p?(l=this.test_match(p,v[i]),l!==!1?l:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var p=this.next();return p||this.lex()},begin:function(p){this.conditionStack.push(p)},popState:function(){var p=this.conditionStack.length-1;return p>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(p){return p=this.conditionStack.length-1-Math.abs(p||0),p>=0?this.conditionStack[p]:"INITIAL"},pushState:function(p){this.begin(p)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(p,g,i,v){switch(i){case 0:return this.begin("open_directive"),50;case 1:return this.begin("type_directive"),51;case 2:return this.popState(),this.begin("arg_directive"),9;case 3:return this.popState(),this.popState(),53;case 4:return 52;case 5:return this.begin("acc_title"),20;case 6:return this.popState(),"acc_title_value";case 7:return this.begin("acc_descr"),22;case 8:return this.popState(),"acc_descr_value";case 9:this.begin("acc_descr_multiline");break;case 10:this.popState();break;case 11:return"acc_descr_multiline_value";case 12:return 14;case 13:break;case 14:break;case 15:return 6;case 16:return 40;case 17:return 33;case 18:return 38;case 19:return 42;case 20:return 43;case 21:return 44;case 22:return 45;case 23:return 35;case 24:return 29;case 25:return 30;case 26:return 37;case 27:return 32;case 28:return 27;case 29:return 10;case 30:return 10;case 31:return 9;case 32:return"CARET";case 33:this.begin("options");break;case 34:this.popState();break;case 35:return 13;case 36:return 36;case 37:this.begin("string");break;case 38:this.popState();break;case 39:return 34;case 40:return 31;case 41:return 54;case 42:return 8}},rules:[/^(?:%%\{)/i,/^(?:((?:(?!\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\}%%)/i,/^(?:((?:(?!\}%%).|\n)*))/i,/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:BT\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[10,11],inclusive:!1},acc_descr:{rules:[8],inclusive:!1},acc_title:{rules:[6],inclusive:!1},close_directive:{rules:[],inclusive:!1},arg_directive:{rules:[3,4],inclusive:!1},type_directive:{rules:[2,3],inclusive:!1},open_directive:{rules:[1],inclusive:!1},options:{rules:[34,35],inclusive:!1},string:{rules:[38,39],inclusive:!1},INITIAL:{rules:[0,5,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,40,41,42,43],inclusive:!0}}};return K}();le.lexer=it;function he(){this.yy={}}return he.prototype=le,le.Parser=he,new he}();ne.parser=ne;const Oe=ne;let $=(0,m.c)().gitGraph.mainBranchName,Ae=(0,m.c)().gitGraph.mainBranchOrder,M={},P=null,J={};J[$]={name:$,order:Ae};let w={};w[$]=P;let L=$,be="LR",Y=0;function ae(){return(0,m.y)({length:7})}const Se=function(r,c,o){m.m.parseDirective(this,r,c,o)};function Pe(r,c){const o=Object.create(null);return r.reduce((h,n)=>{const a=c(n);return o[a]||(o[a]=!0,h.push(n)),h},[])}const Ie=function(r){be=r};let ge={};const Ge=function(r){m.l.debug("options str",r),r=r&&r.trim(),r=r||"{}";try{ge=JSON.parse(r)}catch(c){m.l.error("error while parsing gitGraph options",c.message)}},De=function(){return ge},Ne=function(r,c,o,h){m.l.debug("Entering commit:",r,c,o,h),c=m.e.sanitizeText(c,(0,m.c)()),r=m.e.sanitizeText(r,(0,m.c)()),h=m.e.sanitizeText(h,(0,m.c)());const n={id:c||Y+"-"+ae(),message:r,seq:Y++,type:o||Q.NORMAL,tag:h||"",parents:P==null?[]:[P.id],branch:L};P=n,M[n.id]=n,w[L]=n.id,m.l.debug("in pushCommit "+n.id)},He=function(r,c){if(r=m.e.sanitizeText(r,(0,m.c)()),w[r]===void 0)w[r]=P!=null?P.id:null,J[r]={name:r,order:c?parseInt(c,10):null},de(r),m.l.debug("in createBranch");else{let o=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+r+'")');throw o.hash={text:"branch "+r,token:"branch "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+r+'"']},o}},Ve=function(r,c,o,h){r=m.e.sanitizeText(r,(0,m.c)()),c=m.e.sanitizeText(c,(0,m.c)());const n=M[w[L]],a=M[w[r]];if(L===r){let f=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},f}else if(n===void 0||!n){let f=new Error('Incorrect usage of "merge". Current branch ('+L+")has no commits");throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},f}else if(w[r]===void 0){let f=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") does not exist");throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+r]},f}else if(a===void 0||!a){let f=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") has no commits");throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},f}else if(n===a){let f=new Error('Incorrect usage of "merge". Both branches have same head');throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},f}else if(c&&M[c]!==void 0){let f=new Error('Incorrect usage of "merge". Commit with id:'+c+" already exists, use different custom Id");throw f.hash={text:"merge "+r+c+o+h,token:"merge "+r+c+o+h,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+r+" "+c+"_UNIQUE "+o+" "+h]},f}const b={id:c||Y+"-"+ae(),message:"merged branch "+r+" into "+L,seq:Y++,parents:[P==null?null:P.id,w[r]],branch:L,type:Q.MERGE,customType:o,customId:!!c,tag:h||""};P=b,M[b.id]=b,w[L]=b.id,m.l.debug(w),m.l.debug("in mergeBranch")},ze=function(r,c,o){if(m.l.debug("Entering cherryPick:",r,c,o),r=m.e.sanitizeText(r,(0,m.c)()),c=m.e.sanitizeText(c,(0,m.c)()),o=m.e.sanitizeText(o,(0,m.c)()),!r||M[r]===void 0){let a=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw a.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},a}let h=M[r],n=h.branch;if(h.type===Q.MERGE){let a=new Error('Incorrect usage of "cherryPick". Source commit should not be a merge commit');throw a.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},a}if(!c||M[c]===void 0){if(n===L){let f=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw f.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},f}const a=M[w[L]];if(a===void 0||!a){let f=new Error('Incorrect usage of "cherry-pick". Current branch ('+L+")has no commits");throw f.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},f}const b={id:Y+"-"+ae(),message:"cherry-picked "+h+" into "+L,seq:Y++,parents:[P==null?null:P.id,h.id],branch:L,type:Q.CHERRY_PICK,tag:o!=null?o:"cherry-pick:"+h.id};P=b,M[b.id]=b,w[L]=b.id,m.l.debug(w),m.l.debug("in cherryPick")}},de=function(r){if(r=m.e.sanitizeText(r,(0,m.c)()),w[r]===void 0){let c=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+r+'")');throw c.hash={text:"checkout "+r,token:"checkout "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+r+'"']},c}else{L=r;const c=w[L];P=M[c]}};function ke(r,c,o){const h=r.indexOf(c);h===-1?r.push(o):r.splice(h,1,o)}function _e(r){const c=r.reduce((n,a)=>n.seq>a.seq?n:a,r[0]);let o="";r.forEach(function(n){n===c?o+="	*":o+="	|"});const h=[o,c.id,c.seq];for(let n in w)w[n]===c.id&&h.push(n);if(m.l.debug(h.join(" ")),c.parents&&c.parents.length==2){const n=M[c.parents[0]];ke(r,c,n),r.push(M[c.parents[1]])}else{if(c.parents.length==0)return;{const n=M[c.parents];ke(r,c,n)}}r=Pe(r,n=>n.id),_e(r)}const Be=function(){m.l.debug(M);const r=xe()[0];_e([r])},je=function(){M={},P=null;let r=(0,m.c)().gitGraph.mainBranchName,c=(0,m.c)().gitGraph.mainBranchOrder;w={},w[r]=null,J={},J[r]={name:r,order:c},L=r,Y=0,(0,m.v)()},Ke=function(){return Object.values(J).map((c,o)=>c.order!==null?c:Ce(Me({},c),{order:parseFloat(`0.${o}`,10)})).sort((c,o)=>c.order-o.order).map(({name:c})=>({name:c}))},Ye=function(){return w},Ue=function(){return M},xe=function(){const r=Object.keys(M).map(function(c){return M[c]});return r.forEach(function(c){m.l.debug(c.id)}),r.sort((c,o)=>c.seq-o.seq),r},Fe=function(){return L},qe=function(){return be},We=function(){return P},Q={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},Je={parseDirective:Se,getConfig:()=>(0,m.c)().gitGraph,setDirection:Ie,setOptions:Ge,getOptions:De,commit:Ne,branch:He,merge:Ve,cherryPick:ze,checkout:de,prettyPrint:Be,clear:je,getBranchesAsObjArray:Ke,getBranches:Ye,getCommits:Ue,getCommitsArray:xe,getCurrentBranch:Fe,getDirection:qe,getHead:We,setAccTitle:m.s,getAccTitle:m.g,getAccDescription:m.a,setAccDescription:m.b,setDiagramTitle:m.r,getDiagramTitle:m.t,commitType:Q};let X={};const D={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},U=8;let I={},ee={},te=[],re=0;const Qe=()=>{I={},ee={},X={},re=0,te=[]},Xe=r=>{const c=document.createElementNS("http://www.w3.org/2000/svg","text");let o=[];typeof r=="string"?o=r.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(r)?o=r:o=[];for(const h of o){const n=document.createElementNS("http://www.w3.org/2000/svg","tspan");n.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),n.setAttribute("dy","1em"),n.setAttribute("x","0"),n.setAttribute("class","row"),n.textContent=h.trim(),c.appendChild(n)}return c},ye=(r,c,o)=>{const h=(0,m.z)().gitGraph,n=r.append("g").attr("class","commit-bullets"),a=r.append("g").attr("class","commit-labels");let b=0;Object.keys(c).sort((E,u)=>c[E].seq-c[u].seq).forEach(E=>{const u=c[E],k=I[u.branch].pos,x=b+10;if(o){let s,O=u.customType!==void 0&&u.customType!==""?u.customType:u.type;switch(O){case D.NORMAL:s="commit-normal";break;case D.REVERSE:s="commit-reverse";break;case D.HIGHLIGHT:s="commit-highlight";break;case D.MERGE:s="commit-merge";break;case D.CHERRY_PICK:s="commit-cherry-pick";break;default:s="commit-normal"}if(O===D.HIGHLIGHT){const R=n.append("rect");R.attr("x",x-10),R.attr("y",k-10),R.attr("height",20),R.attr("width",20),R.attr("class",`commit ${u.id} commit-highlight${I[u.branch].index%U} ${s}-outer`),n.append("rect").attr("x",x-6).attr("y",k-6).attr("height",12).attr("width",12).attr("class",`commit ${u.id} commit${I[u.branch].index%U} ${s}-inner`)}else if(O===D.CHERRY_PICK)n.append("circle").attr("cx",x).attr("cy",k).attr("r",10).attr("class",`commit ${u.id} ${s}`),n.append("circle").attr("cx",x-3).attr("cy",k+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${u.id} ${s}`),n.append("circle").attr("cx",x+3).attr("cy",k+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${u.id} ${s}`),n.append("line").attr("x1",x+3).attr("y1",k+1).attr("x2",x).attr("y2",k-5).attr("stroke","#fff").attr("class",`commit ${u.id} ${s}`),n.append("line").attr("x1",x-3).attr("y1",k+1).attr("x2",x).attr("y2",k-5).attr("stroke","#fff").attr("class",`commit ${u.id} ${s}`);else{const R=n.append("circle");if(R.attr("cx",x),R.attr("cy",k),R.attr("r",u.type===D.MERGE?9:10),R.attr("class",`commit ${u.id} commit${I[u.branch].index%U}`),O===D.MERGE){const H=n.append("circle");H.attr("cx",x),H.attr("cy",k),H.attr("r",6),H.attr("class",`commit ${s} ${u.id} commit${I[u.branch].index%U}`)}O===D.REVERSE&&n.append("path").attr("d",`M ${x-5},${k-5}L${x+5},${k+5}M${x-5},${k+5}L${x+5},${k-5}`).attr("class",`commit ${s} ${u.id} commit${I[u.branch].index%U}`)}}if(ee[u.id]={x:b+10,y:k},o){if(u.type!==D.CHERRY_PICK&&(u.customId&&u.type===D.MERGE||u.type!==D.MERGE)&&h.showCommitLabel){const R=a.append("g"),H=R.insert("rect").attr("class","commit-label-bkg"),y=R.append("text").attr("x",b).attr("y",k+25).attr("class","commit-label").text(u.id);let d=y.node().getBBox();if(H.attr("x",b+10-d.width/2-2).attr("y",k+13.5).attr("width",d.width+2*2).attr("height",d.height+2*2),y.attr("x",b+10-d.width/2),h.rotateCommitLabel){let _=-7.5-(d.width+10)/25*9.5,N=10+d.width/25*8.5;R.attr("transform","translate("+_+", "+N+") rotate(-45, "+b+", "+k+")")}}if(u.tag){const R=a.insert("polygon"),H=a.append("circle"),y=a.append("text").attr("y",k-16).attr("class","tag-label").text(u.tag);let d=y.node().getBBox();y.attr("x",b+10-d.width/2);const _=d.height/2,N=k-19.2;R.attr("class","tag-label-bkg").attr("points",`
          ${b-d.width/2-4/2},${N+2}
          ${b-d.width/2-4/2},${N-2}
          ${b+10-d.width/2-4},${N-_-2}
          ${b+10+d.width/2+4},${N-_-2}
          ${b+10+d.width/2+4},${N+_+2}
          ${b+10-d.width/2-4},${N+_+2}`),H.attr("cx",b-d.width/2+4/2).attr("cy",N).attr("r",1.5).attr("class","tag-hole")}}b+=50,b>re&&(re=b)})},Ze=(r,c,o)=>Object.keys(o).filter(a=>o[a].branch===c.branch&&o[a].seq>r.seq&&o[a].seq<c.seq).length>0,oe=(r,c,o=0)=>{const h=r+Math.abs(r-c)/2;if(o>5)return h;if(te.every(b=>Math.abs(b-h)>=10))return te.push(h),h;const a=Math.abs(r-c);return oe(r,c-a/5,o+1)},$e=(r,c,o,h)=>{const n=ee[c.id],a=ee[o.id],b=Ze(c,o,h);let f="",T="",E=0,u=0,k=I[o.branch].index,x;if(b){f="A 10 10, 0, 0, 0,",T="A 10 10, 0, 0, 1,",E=10,u=10,k=I[o.branch].index;const s=n.y<a.y?oe(n.y,a.y):oe(a.y,n.y);n.y<a.y?x=`M ${n.x} ${n.y} L ${n.x} ${s-E} ${f} ${n.x+u} ${s} L ${a.x-E} ${s} ${T} ${a.x} ${s+u} L ${a.x} ${a.y}`:x=`M ${n.x} ${n.y} L ${n.x} ${s+E} ${T} ${n.x+u} ${s} L ${a.x-E} ${s} ${f} ${a.x} ${s-u} L ${a.x} ${a.y}`}else n.y<a.y&&(f="A 20 20, 0, 0, 0,",E=20,u=20,k=I[o.branch].index,x=`M ${n.x} ${n.y} L ${n.x} ${a.y-E} ${f} ${n.x+u} ${a.y} L ${a.x} ${a.y}`),n.y>a.y&&(f="A 20 20, 0, 0, 0,",E=20,u=20,k=I[c.branch].index,x=`M ${n.x} ${n.y} L ${a.x-E} ${n.y} ${f} ${a.x} ${n.y-u} L ${a.x} ${a.y}`),n.y===a.y&&(k=I[c.branch].index,x=`M ${n.x} ${n.y} L ${n.x} ${a.y-E} ${f} ${n.x+u} ${a.y} L ${a.x} ${a.y}`);r.append("path").attr("d",x).attr("class","arrow arrow"+k%U)},et=(r,c)=>{const o=r.append("g").attr("class","commit-arrows");Object.keys(c).forEach(h=>{const n=c[h];n.parents&&n.parents.length>0&&n.parents.forEach(a=>{$e(o,c[a],n,c)})})},tt=(r,c)=>{const o=(0,m.z)().gitGraph,h=r.append("g");c.forEach((n,a)=>{const b=a%U,f=I[n.name].pos,T=h.append("line");T.attr("x1",0),T.attr("y1",f),T.attr("x2",re),T.attr("y2",f),T.attr("class","branch branch"+b),te.push(f);let E=n.name;const u=Xe(E),k=h.insert("rect"),s=h.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+b);s.node().appendChild(u);let O=u.getBBox();k.attr("class","branchLabelBkg label"+b).attr("rx",4).attr("ry",4).attr("x",-O.width-4-(o.rotateCommitLabel===!0?30:0)).attr("y",-O.height/2+8).attr("width",O.width+18).attr("height",O.height+4),s.attr("transform","translate("+(-O.width-14-(o.rotateCommitLabel===!0?30:0))+", "+(f-O.height/2-1)+")"),k.attr("transform","translate(-19, "+(f-O.height/2)+")")})},rt={parser:Oe,db:Je,renderer:{draw:function(r,c,o,h){var E;Qe();const n=(0,m.z)(),a=n.gitGraph;m.l.debug("in gitgraph renderer",r+`
`,"id:",c,o),X=h.db.getCommits();const b=h.db.getBranchesAsObjArray();let f=0;b.forEach((u,k)=>{I[u.name]={pos:f,index:k},f+=50+(a.rotateCommitLabel?40:0)});const T=(0,Le.Ys)(`[id="${c}"]`);ye(T,X,!1),a.showBranches&&tt(T,b),et(T,X),ye(T,X,!0),m.u.insertTitle(T,"gitTitleText",a.titleTopMargin,h.db.getDiagramTitle()),(0,m.A)(void 0,T,a.diagramPadding,(E=a.useMaxWidth)!=null?E:n.useMaxWidth)}},styles:r=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(c=>`
        .branch-label${c} { fill: ${r["gitBranchLabel"+c]}; }
        .commit${c} { stroke: ${r["git"+c]}; fill: ${r["git"+c]}; }
        .commit-highlight${c} { stroke: ${r["gitInv"+c]}; fill: ${r["gitInv"+c]}; }
        .label${c}  { fill: ${r["git"+c]}; }
        .arrow${c} { stroke: ${r["git"+c]}; }
        `).join(`
`)}

  .branch {
    stroke-width: 1;
    stroke: ${r.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelColor};}
  .commit-label-bkg { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${r.tagLabelFontSize}; fill: ${r.tagLabelColor};}
  .tag-label-bkg { fill: ${r.tagLabelBackground}; stroke: ${r.tagLabelBorder}; }
  .tag-hole { fill: ${r.textColor}; }

  .commit-merge {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }
  .commit-reverse {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${r.textColor};
  }
`}}}]);
}());